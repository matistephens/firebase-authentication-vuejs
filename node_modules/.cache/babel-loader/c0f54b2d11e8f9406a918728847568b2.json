{"ast":null,"code":"import _regeneratorRuntime from \"/Users/matiasstephens/Documents/GitHub/bootcamp/G14/desafios-y-pruebas/37-autenticacion-con-vue-router-y-firebase/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/matiasstephens/Documents/GitHub/bootcamp/G14/desafios-y-pruebas/37-autenticacion-con-vue-router-y-firebase/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/matiasstephens/Documents/GitHub/bootcamp/G14/desafios-y-pruebas/37-autenticacion-con-vue-router-y-firebase/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      dialog: false,\n      modal: false,\n      newUser: {},\n      title: ''\n    };\n  },\n  props: ['value'],\n  mounted: function mounted() {\n    // shallow copy\n    this.newUser = _objectSpread({}, this.value);\n    this.title = this.newUser.name || this.newUser.id;\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions(\"users\", {\n    'updateUserById': 'updateOneById',\n    'getAllUsers': 'getAll'\n  })), {}, {\n    handleFormSubmit: function handleFormSubmit() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!_this.$refs.form.validate()) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 3;\n                return _this.updateUserById(_this.newUser);\n\n              case 3:\n                _this.dialog = false;\n                _context.next = 6;\n                return _this.getAllUsers();\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  })\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;EACAA;IAAA;MACAC,aADA;MAEAC,YAFA;MAGAC,WAHA;MAIAC;IAJA;EAAA,CADA;EAOAC,gBAPA;EAQAC,OARA,qBAQA;IACA;IACA;IACA;EACA,CAZA;EAaAC,yCACAC;IACA,iCADA;IAEA;EAFA,EADA;IAKAC,gBALA,8BAKA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA,KACA,2BADA;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA,OAEA,mCAFA;;cAAA;gBAGA;gBAHA;gBAAA,OAIA,mBAJA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAMA;EAXA;AAbA","names":["data","dialog","modal","newUser","title","props","mounted","methods","mapActions","handleFormSubmit"],"sourceRoot":"src/components","sources":["EditUserBtn.vue"],"sourcesContent":["<template>\n  <v-dialog width=\"500\" v-model=\"dialog\">\n    <template v-slot:activator=\"{ on }\">\n      <v-btn icon color=\"info\" v-on=\"on\">\n        <v-icon>mdi-pencil</v-icon>\n      </v-btn>\n    </template>\n\n    <v-card>\n      <v-form @submit.prevent=\"handleFormSubmit\" ref=\"form\">\n        <v-card-title> Editar usuario: {{ title }} </v-card-title>\n        <v-card-text>\n          <v-text-field label=\"Nombre\" v-model=\"newUser.name\"></v-text-field>\n          <v-text-field\n            label=\"Apellido\"\n            v-model=\"newUser.lastName\"\n          ></v-text-field>\n          <v-dialog\n            ref=\"dialog\"\n            v-model=\"modal\"\n            :return-newUser.sync=\"newUser.birthDate\"\n            persistent\n            width=\"290px\"\n          >\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-text-field\n                v-model=\"newUser.birthDate\"\n                label=\"Fecha de Nacimiento\"\n                prepend-icon=\"mdi-calendar\"\n                readonly\n                v-bind=\"attrs\"\n                v-on=\"on\"\n              ></v-text-field>\n            </template>\n            <v-date-picker v-model=\"newUser.birthDate\" scrollable>\n              <v-spacer></v-spacer>\n              <v-btn text color=\"primary\" @click=\"modal = false\">\n                Cancel\n              </v-btn>\n              <v-btn\n                text\n                color=\"primary\"\n                @click=\"$refs.dialog.save(newUser.birthDate)\"\n              >\n                OK\n              </v-btn>\n            </v-date-picker>\n          </v-dialog>\n          <v-text-field\n            label=\"Numero de TelÃ©fono\"\n            type=\"number\"\n            v-model=\"newUser.phoneNumber\"\n          ></v-text-field>\n          <v-text-field\n            readonly\n            disabled\n            label=\"Rol\"\n            v-model=\"newUser.role\"\n          ></v-text-field>\n        </v-card-text>\n        <v-card-actions>\n          <v-btn color=\"info\" block type=\"submit\">\n            Crear\n            <v-icon>mdi-send</v-icon>\n          </v-btn>\n        </v-card-actions>\n      </v-form>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { mapActions } from 'vuex';\nexport default {\n  data: () => ({\n    dialog: false,\n    modal: false,\n    newUser: {},\n    title: '',\n  }),\n  props: ['value'],\n  mounted() {\n    // shallow copy\n    this.newUser = { ...this.value };\n    this.title = this.newUser.name || this.newUser.id;\n  },\n  methods: {\n    ...mapActions(\"users\", {\n      'updateUserById': 'updateOneById',\n      'getAllUsers': 'getAll'\n    }),\n    async handleFormSubmit() {\n      if (this.$refs.form.validate()) {\n        await this.updateUserById(this.newUser);\n        this.dialog = false;\n        await this.getAllUsers();\n      }\n    },\n  },\n};\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module"}