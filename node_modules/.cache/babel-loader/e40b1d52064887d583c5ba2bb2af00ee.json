{"ast":null,"code":"import _regeneratorRuntime from \"/Users/matiasstephens/Documents/GitHub/bootcamp/G14/desafios-y-pruebas/37-autenticacion-con-vue-router-y-firebase/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/matiasstephens/Documents/GitHub/bootcamp/G14/desafios-y-pruebas/37-autenticacion-con-vue-router-y-firebase/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/matiasstephens/Documents/GitHub/bootcamp/G14/desafios-y-pruebas/37-autenticacion-con-vue-router-y-firebase/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      dialog: false,\n      credentials: {\n        email: '',\n        password: ''\n      }\n    };\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions(\"session\", [\"createUserWithEmailAndPassword\"])), {}, {\n    handleSignUpFormSubmit: function handleSignUpFormSubmit() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!_this.$refs.signUpFormRef.validate()) {\n                  _context.next = 3;\n                  break;\n                }\n\n                _context.next = 3;\n                return _this.createUserWithEmailAndPassword(_this.credentials);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    required: function required(value) {\n      return !!value || \"Este campo es obligatorio\";\n    },\n    mustBeEmail: function mustBeEmail(value) {\n      return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value) || \"El campo debe ser un email\";\n    },\n    minLength: function minLength(length) {\n      return function (value) {\n        return String(value).length >= length || \"El campo no tiene el minimo de \".concat(length, \" car\\xE1cteres\");\n      };\n    }\n  })\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;EACAA;IAAA;MACAC,aADA;MAEAC;QACAC,SADA;QAEAC;MAFA;IAFA;EAAA,CADA;EAQAC,yCACAC,yDADA;IAEAC,sBAFA,oCAEA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA,KACA,oCADA;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA,OAEA,uDAFA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAIA,CANA;IAOAC,QAPA,oBAOAC,KAPA,EAOA;MACA;IACA,CATA;IAUAC,WAVA,uBAUAD,KAVA,EAUA;MACA;IACA,CAZA;IAaAE,SAbA,qBAaAC,MAbA,EAaA;MACA;QAAA;MAAA;IACA;EAfA;AARA","names":["data","dialog","credentials","email","password","methods","mapActions","handleSignUpFormSubmit","required","value","mustBeEmail","minLength","length"],"sourceRoot":"src/components","sources":["SignUpBtn.vue"],"sourcesContent":["<template>\n  <v-dialog v-model=\"dialog\" width=\"500\">\n    <template #activator=\"{ on }\">\n      <v-btn v-on=\"on\" text> Crear cuenta </v-btn>\n    </template>\n    <v-card>\n      <v-form @submit.prevent=\"handleSignUpFormSubmit\" ref=\"signUpFormRef\">\n        <v-card-title> Crea una nueva cuenta </v-card-title>\n        <v-card-text>\n          <v-text-field\n            type=\"email\"\n            label=\"Correo electrónico\"\n            outlined\n            v-model=\"credentials.email\"\n            :rules=\"[required, mustBeEmail]\"\n          ></v-text-field>\n          <v-text-field\n            type=\"password\"\n            label=\"Contraseña\"\n            outlined\n            v-model=\"credentials.password\"\n            :rules=\"[required, minLength(6)]\"\n          ></v-text-field>\n        </v-card-text>\n        <v-card-actions>\n          <v-btn color=\"success\" block type=\"submit\">\n            Enviar\n            <v-icon>mdi-send</v-icon>\n          </v-btn>\n        </v-card-actions>\n      </v-form>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { mapActions} from \"vuex\";\nexport default {\n  data: () => ({\n    dialog: false,\n    credentials: {\n      email: '',\n      password: '',\n    },\n  }),\n  methods: {\n    ...mapActions(\"session\", [\"createUserWithEmailAndPassword\"]),\n    async handleSignUpFormSubmit(){\n      if(this.$refs.signUpFormRef.validate()){\n        await this.createUserWithEmailAndPassword(this.credentials);\n      }\n    },\n    required(value){\n      return !!value || \"Este campo es obligatorio\"\n    },\n    mustBeEmail(value){\n      return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value) || \"El campo debe ser un email\"\n    },\n    minLength(length){\n      return (value) => String(value).length >= length  || `El campo no tiene el minimo de ${length} carácteres`\n    }\n  }\n};\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module"}